天气：阴天为主，中午时分下了大雨 

事件一：
今天陪媳妇去了另一家医院产假，和之前的医院，不太人性化。
    进入大门的程序过于浪费资源，健康码和行程码不够，还有弄自己的一套东西。
    以完成自己的任务为主，不多做一步，猜测是怕担责。
    管理也比较随便，禁止男士进入形同虚设。
    建筑结构设计有问题，天花板弄的太低，空气不流通，感觉压抑。
    大屏设施体验也很差，不能清楚的了解当前等待进度，不了解初诊复诊人员情况，流程繁琐，时间消耗比较大。
    没有站在用户的角度考虑问题。
    总结一句就是：这是一家机器化公立医院。可优化的地方很多。
    
    种种问题，在我们自己的工作中也有不少可以借鉴的地方：多思考，多从用户体验去思考，优化流程。

事件二：
研究了一下Go与Rust的情况，都是新时代的语言，每个的侧重点不一样。
    要开发效率还是要绝对的安全；
    构建大型项目还是绝对性能为主；
    简单入门还是了解所有细节；
    是否由程序员自己绝对控制；
    并发的实现；
    每个语言自己的特性：反射，泛型，动态，静态
    范式编程：命令式，对象式，函数式。。。

    最终的话还是回归到内存布局上，了解内存布局就能明白语言的相关特性
    本质上还是内存布局：抽象设计。

事件三：
看了一些技术群，感觉过于机械化了，刷题的目的不应该是为了应付面式。
    要想想大厂为什么以考算法和系统设计来标准，要理解背后的意义。

    我的理解是：对现实的高度抽象概括能力



